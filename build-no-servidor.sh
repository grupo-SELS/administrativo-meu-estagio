#!/bin/bash
# ===============================================
# BUILD NO SERVIDOR - Script Completo
# ===============================================
# Execute no servidor ap√≥s enviar o c√≥digo fonte
# Uso: bash build-no-servidor.sh
# ===============================================

set -e  # Sair em caso de erro

echo "üöÄ Iniciando build no servidor..."
echo ""

# Cores para output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Verificar se est√° na pasta correta
if [ ! -d "./frontend" ] || [ ! -d "./backend" ]; then
    echo -e "${RED}‚ùå Erro: Execute este script na pasta /var/www/site-adm-app/${NC}"
    exit 1
fi

# ===============================================
# FRONTEND - BUILD
# ===============================================
echo -e "${YELLOW}üì¶ Buildando Frontend...${NC}"
cd frontend

# Verificar se package.json existe
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Erro: package.json n√£o encontrado!${NC}"
    exit 1
fi

# Instalar depend√™ncias
echo "   - Instalando depend√™ncias do frontend..."
npm install

# Verificar se .env.production existe
if [ ! -f ".env.production" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Aten√ß√£o: .env.production n√£o encontrado!${NC}"
    echo "   Usando vari√°veis padr√£o..."
fi

# Build de produ√ß√£o
echo "   - Executando build de produ√ß√£o..."
npm run build

# Verificar se build foi criado
if [ ! -d "dist" ]; then
    echo -e "${RED}‚ùå Erro: Build falhou! Pasta dist n√£o foi criada.${NC}"
    exit 1
fi

# Copiar build para pasta de produ√ß√£o
echo "   - Copiando build para pasta de produ√ß√£o..."
cd ..
rm -rf frontend-dist
mkdir -p frontend-dist
cp -r frontend/dist/* frontend-dist/

echo -e "${GREEN}‚úÖ Frontend buildado com sucesso!${NC}"
echo ""

# ===============================================
# BACKEND - CONFIGURA√á√ÉO
# ===============================================
echo -e "${YELLOW}‚öôÔ∏è  Configurando Backend...${NC}"
cd backend

# Verificar se package.json existe
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Erro: package.json n√£o encontrado!${NC}"
    exit 1
fi

# Instalar depend√™ncias de produ√ß√£o
echo "   - Instalando depend√™ncias de produ√ß√£o..."
npm install --production

# Criar pasta uploads se n√£o existir
if [ ! -d "uploads" ]; then
    echo "   - Criando pasta uploads..."
    mkdir -p uploads
    chmod 755 uploads
fi

# Verificar se .env existe
if [ ! -f ".env" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Aten√ß√£o: .env n√£o encontrado!${NC}"
    
    if [ -f ".env.production" ]; then
        echo "   - Copiando .env.production para .env..."
        cp .env.production .env
    else
        echo -e "${RED}‚ùå Erro: Nenhum arquivo .env encontrado!${NC}"
        echo "   Configure o .env antes de continuar."
        exit 1
    fi
fi

echo -e "${GREEN}‚úÖ Backend configurado com sucesso!${NC}"
echo ""

# ===============================================
# PM2 - INICIAR/REINICIAR
# ===============================================
echo -e "${YELLOW}üîÑ Gerenciando processo PM2...${NC}"

# Verificar se PM2 est√° instalado
if ! command -v pm2 &> /dev/null; then
    echo -e "${RED}‚ùå PM2 n√£o est√° instalado!${NC}"
    echo "   Instale com: npm install -g pm2"
    exit 1
fi

# Verificar se ecosystem.config.js existe
if [ ! -f "ecosystem.config.js" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  ecosystem.config.js n√£o encontrado!${NC}"
    echo "   Iniciando com ts-node diretamente..."
    pm2 start server.ts --name site-adm-estagio-backend --interpreter ts-node
else
    # Verificar se app j√° est√° rodando
    if pm2 list | grep -q "site-adm-estagio-backend"; then
        echo "   - Reiniciando aplica√ß√£o existente..."
        pm2 restart site-adm-estagio-backend
    else
        echo "   - Iniciando nova aplica√ß√£o..."
        pm2 start ecosystem.config.js
    fi
fi

# Salvar configura√ß√£o PM2
pm2 save

echo -e "${GREEN}‚úÖ Processo PM2 iniciado!${NC}"
echo ""

# ===============================================
# NGINX - RECARREGAR
# ===============================================
echo -e "${YELLOW}üåê Recarregando Nginx...${NC}"

# Verificar se Nginx est√° instalado
if ! command -v nginx &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Nginx n√£o est√° instalado (ainda)${NC}"
else
    # Testar configura√ß√£o
    if nginx -t &> /dev/null; then
        systemctl reload nginx
        echo -e "${GREEN}‚úÖ Nginx recarregado!${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Configura√ß√£o do Nginx tem erros${NC}"
        echo "   Execute: nginx -t para ver os erros"
    fi
fi

echo ""

# ===============================================
# VERIFICA√á√ÉO
# ===============================================
echo -e "${YELLOW}üîç Verificando servi√ßos...${NC}"
echo ""

# Backend
echo "Backend (PM2):"
pm2 list | grep site-adm-estagio-backend || echo "   ‚ö†Ô∏è  Backend n√£o encontrado"
echo ""

# Frontend
echo "Frontend:"
if [ -d "../frontend-dist" ] && [ "$(ls -A ../frontend-dist)" ]; then
    echo -e "   ${GREEN}‚úÖ Build do frontend pronto${NC}"
    echo "   Arquivos: $(ls -1 ../frontend-dist | wc -l)"
else
    echo -e "   ${RED}‚ùå Pasta frontend-dist vazia${NC}"
fi
echo ""

# Nginx
echo "Nginx:"
if systemctl is-active --quiet nginx; then
    echo -e "   ${GREEN}‚úÖ Nginx rodando${NC}"
else
    echo -e "   ${RED}‚ùå Nginx n√£o est√° rodando${NC}"
fi
echo ""

# ===============================================
# RESUMO
# ===============================================
echo "======================================================================"
echo -e "${GREEN}‚úÖ Build conclu√≠do com sucesso!${NC}"
echo "======================================================================"
echo ""
echo "üìã Pr√≥ximos passos:"
echo ""
echo "1. Verifique os logs do backend:"
echo "   pm2 logs site-adm-estagio-backend"
echo ""
echo "2. Teste o site:"
echo "   curl http://localhost:3001/health"
echo "   curl http://localhost"
echo ""
echo "3. Configure Nginx se ainda n√£o fez:"
echo "   Veja o guia: DEPLOY_VPS_COMPLETO.md"
echo ""
echo "4. Configure SSL/HTTPS:"
echo "   sudo certbot --nginx -d meuestagio.chattec.com.br"
echo ""
echo "======================================================================"
